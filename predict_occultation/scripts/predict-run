#!/usr/bin/env python3

import argparse
import os
from utils import load_yml, setup_logger


class Runner:

    def __init__(self, config, cwd=".") -> None:
        self.logger = setup_logger("predict", logdir=cwd)
        self.cwd = cwd

        # Loading config
        self.config = load_yml(config)

    def __enter__(self):
        return self

    def run(self):
        """Run Hello World"""
        self.logger.info("Running Predict Occultation")
        self.logger.info(f"cwd: {self.cwd}")
        self.logger.info(f"message: {self.config.get('message')}")

        

    def __exit__(self, exc_type, exc_value, traceback):

        if exc_type:
            self.logger.error("%s: %s", exc_type.__name__, exc_value)
            self.logger.debug("Traceback: %s", traceback)
        else:
            self.logger.info("done!")
            

if __name__ == "__main__":
    # Create the parser and add arguments
    parser = argparse.ArgumentParser()
    parser.add_argument(dest="config_path", help="yaml config path")
    parser.add_argument(
        dest="cwd", nargs="?", help="processing dir", default=os.getcwd()
    )

    args = parser.parse_args()
    config_path = args.config_path
    cwd = args.cwd

    # Run pipeline
    with Runner(config_path, cwd) as hwrun:
        hwrun.run()
